generator client {
  provider = "prisma-client-js"
  output   = "../dist/generated/client"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:123@localhost:2222/qini_db"
}

model Users {
  id       String    @id @default(uuid())
  username String    @unique @db.VarChar(50)
  password String    @db.VarChar(100)
  email    String?   @unique @db.VarChar(50)
  active   Boolean   @default(true)
  createAt DateTime  @default(now()) @db.Timestamp(6)
  role     Role      @default(USER)
  updateAt DateTime? @db.Timestamp(6)
}

model Staffs {
  id       String    @id @default(uuid())
  name     String    @unique @db.VarChar(50)
  email    String?   @unique @db.VarChar(50)
  active   Boolean   @default(true)
  createAt DateTime  @default(now()) @db.Timestamp(6)
  updateAt DateTime? @db.Timestamp(6)
  salary   Int       @default(0)
  Reports  Reports[]
}

model Revenues {
  id       String    @id @default(uuid())
  revenue  Float     @db.Real
  createAt DateTime  @default(now()) @db.Timestamp(6)
  updateAt DateTime? @db.Timestamp(6)
  Reports  Reports[]
}

model Reports {
  id         String    @id @default(uuid())
  revenueId  String    @db.VarChar(50)
  checkIn    String    @db.VarChar(10)
  checkOut   String    @db.VarChar(10)
  target     Float     @db.Real
  createAt   DateTime  @default(now()) @db.Timestamp(6)
  updateAt   DateTime? @db.Timestamp(6)
  timeWorked Float     @db.Real
  staffId    String    @default("") @db.VarChar(50)
  revenue    Revenues  @relation(fields: [revenueId], references: [id], onDelete: Cascade)
  staff      Staffs    @relation(fields: [staffId], references: [id])
}

enum Role {
  USER
  ADMIN
}
